# Generated by Django 2.1.2 on 2018-10-21 06:06

import apps.home.models
from django.conf import settings
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.contrib.postgres.operations import CreateExtension


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        CreateExtension('postgis'),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ava_user', models.ImageField(blank=True, default='avatars/default.png', null=True, upload_to='avatars')),
                ('isPart', models.BooleanField(default=False)),
                ('isVet', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', apps.home.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('partner_phone', models.CharField(blank=True, max_length=12, null=True)),
                ('partner_state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, null=True, verbose_name='state')),
                ('partner_zip', models.CharField(blank=True, max_length=5, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=300, null=True)),
                ('partner_address', models.CharField(blank=True, max_length=300, null=True)),
                ('partner_mission', models.CharField(blank=True, max_length=300, null=True)),
                ('partner_logo', models.ImageField(blank=True, default='avatars/default.png', null=True, upload_to='partnerLogos')),
                ('partner_web_address', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_isPart', models.FloatField(default=True)),
                ('partner_Lat', models.FloatField(blank=True, default=0.0, null=True)),
                ('partner_Lon', models.FloatField(blank=True, default=0.0, null=True)),
                ('partner_point', django.contrib.gis.db.models.fields.PointField(blank=True, default='0101000020E6100000EC884336906740407B911A248E495DC0', null=True, srid=4326)),
            ],
            options={
                'db_table': 'partner',
            },
            bases=('home.user',),
            managers=[
                ('objects', apps.home.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Veteran',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('vet_mobile', models.CharField(blank=True, max_length=12, null=True)),
                ('vet_state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, null=True, verbose_name='state')),
                ('vet_zip', models.CharField(blank=True, max_length=5, null=True)),
                ('vet_branch', models.CharField(choices=[('', '---------'), ('usaf', 'Air Force'), ('usa', 'Army'), ('uscg', 'Coast Guard'), ('usmc', 'Marines'), ('usn', 'Navy')], max_length=4, verbose_name='vet_branch')),
                ('vet_isPurpleHeart', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isPurpleHeart')),
                ('vet_isPost911', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isPost911')),
                ('vet_isCombat', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isCombat')),
                ('vet_isVet', models.BooleanField(default=True)),
                ('vet_isNotifications', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isNotifications')),
                ('vet_isShared', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isShared')),
                ('vet_isSignedUp', models.BooleanField(blank=True, choices=[('', '---------'), (True, 'Yes'), (False, 'No')], null=True, verbose_name='vet_isSignedUp')),
                ('vet_Lat', models.FloatField(blank=True, default=0.0, null=True)),
                ('vet_Lon', models.FloatField(blank=True, default=0.0, null=True)),
                ('vet_point', django.contrib.gis.db.models.fields.PointField(blank=True, default='0101000020E6100000EC884336906740407B911A248E495DC0', null=True, srid=4326)),
            ],
            options={
                'db_table': 'veteran',
            },
            bases=('home.user',),
            managers=[
                ('objects', apps.home.models.CustomUserManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
